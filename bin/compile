#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

echo "-----> Installing Mitro Server"

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

if [ -e $ENV_DIR/DEBUG_BUILDPACK ]
    DEBUGB = 1
fi


# <BUILD_DIR> is (during this stage) a temporary directory. 
# During execution of your slug it'll be known as '/app'.

. $(dirname $0)/common

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

if [ ! -e $ENV_DIR/DATABASE_URL ]
then
  echo "No DATABASE_URL found. Make sure you have added the postgres addon."
  exit 1;
fi


JVM_COMMON_BUILDPACK=http://lang-jvm.s3.amazonaws.com/jvm-buildpack-common-v3.tar.gz
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
javaVersion=1.7
echo -n "-----> Installing OpenJDK ${javaVersion}..."
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
echo " done"

PROFILE_PATH="$BUILD_DIR/.profile.d/java.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$(dirname $0):/app/.jdk/bin:$PATH"' >> $PROFILE_PATH
echo 'export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS -Djava.rmi.server.useCodebaseOnly=true"' >> $PROFILE_PATH

PATH="$(dirname $0):$PATH"

#create the cache dir if it doesn't exist
mkdir -p $VENDORING_DIR

# change to vendoring dir to install apache ant
cd $VENDORING_DIR

if [ -x $ANT_HOME/bin/ant ] ; then
#assuming Apache Ant is already installed...
    echo "-----> Using Apache Ant $ANT_VER....."
else
    echo "-----> Installing Apache Ant $ANT_VER..... [start]"
    curl --max-time 180 --location $ANT_URL | tar xz
    chmod +x $ANT_HOME/bin/ant
    echo "-----> Installing Apache Ant $ANT_VER..... [done ]!"
fi


if [ ! -f $BUILD_DIR/build.xml ] ; then
    echo "Failed to build app with Apache Ant"
fi


# change to build dir to run ant
cd ${BUILD_DIR}/mitro-core
#cd mitro-core

export ANT_OPTS="-Xmx512m"

# build app
BUILDCMD="$ANT_HOME/bin/ant -Duser.home=${BUILD_DIR} jar"
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1 | indent
ls -al ${PWD}  | indent

ls -al ${BUILD_DIR}  | indent

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to build app with Apache Ant"
    exit 1
fi

cd $BUILD_DIR

#export "DATABASE_URL=$(cat $ENV_DIR/DATABASE_URL)"
#echo "-----> DB: $DATABASE_URL"
DATABASE_URL=$(cat $ENV_DIR/DATABASE_URL)

DB_REGX="postgres://(.+):(.+)@(.+):([0-9]+)/(.+)" 
[[ $DATABASE_URL =~ $DB_REGX ]] 

DB_USER=${BASH_REMATCH[1]}
DB_PASS=${BASH_REMATCH[2]}
DB_HOST=${BASH_REMATCH[3]}
DB_PORT=${BASH_REMATCH[4]}
DB_DATABASE=${BASH_REMATCH[5]}

DB_URL="jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USER}&password=${DB_PASS}"

echo "web: java -ea -DgenerateSecretsForTest=true -Dhttp_port=\$PORT -Ddatabase_url='$DB_URL' -jar mitro-core/build/mitrocore.jar" > Procfile

if [ -n "$1" ]
    cat ./Procfile
fi
