#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

echo "-----> Installing Mitro"


# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

#export "DATABASE_URL=$(cat $ENV_DIR/DATABASE_URL)"
#echo "-----> DB: $DATABASE_URL"
echo "-----> PORT: $PORT"

# <BUILD_DIR> is (during this stage) a temporary directory. 
# During execution of your slug it'll be known as '/app'.

. $(dirname $0)/common

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

function indent() {
    c='s/^/       /'
        case $(uname) in
        Darwin) sed -l "$c";;
    *)      sed -u "$c";;
    esac
}





JVM_COMMON_BUILDPACK=http://lang-jvm.s3.amazonaws.com/jvm-buildpack-common-v3.tar.gz
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

export_env_dir $ENV_DIR
echo "ENV DIR LSITING"
ls $ENV_DIR
echo "---"

## create default system.properties
#if [ ! -f ${BUILD_DIR}/system.properties ]; then
    #cat > ${BUILD_DIR}/system.properties <<EOF
#java.runtime.version=1.7
#EOF
#fi

# install JDK
#javaVersion=$(detect_java_version ${BUILD_DIR})
javaVersion=1.7
echo -n "-----> Installing OpenJDK ${javaVersion}..."
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
echo " done"

PROFILE_PATH="$BUILD_DIR/.profile.d/java.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$(dirname $0):/app/.jdk/bin:$PATH"' >> $PROFILE_PATH
echo 'export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS -Djava.rmi.server.useCodebaseOnly=true"' >> $PROFILE_PATH


PATH="$(dirname $0):$PATH"
ls $(dirname $0)
echo "$(dirname $0)"
echo "PATH: $PATH"





#create the cache dir if it doesn't exist
mkdir -p $VENDORING_DIR

# change to vendoring dir to install apache ant
cd $VENDORING_DIR

if [ -x $ANT_HOME/bin/ant ] ; then
#assuming Apache Ant is already installed...
    echo "-----> Using Apache Ant $ANT_VER....."
else
    echo "-----> Installing Apache Ant $ANT_VER..... [start]"
    curl --max-time 180 --location $ANT_URL | tar xz
    chmod +x $ANT_HOME/bin/ant
    echo "-----> Installing Apache Ant $ANT_VER..... [done ]!"
fi


if [ ! -f $BUILD_DIR/build.xml ] ; then
    echo "Failed to build app with Apache Ant"
fi


# change to build dir to run ant
cd ${BUILD_DIR}
cd mitro-core


export ANT_OPTS="-Xmx512m"

# build app
#BUILDCMD="$ANT_HOME/bin/ant -Duser.home=${BUILD_DIR} clean install"
#BUILDCMD="$ANT_HOME/bin/ant -Duser.home=${BUILD_DIR} server"
BUILDCMD="$ANT_HOME/bin/ant -Duser.home=${BUILD_DIR} jar"
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1 | indent
ls -al ${PWD}  | indent

ls -al ${BUILD_DIR}  | indent

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to build app with Apache Ant"
    exit 1
fi

cd $BUILD_DIR
#echo "web: java -ea -DgenerateSecretsForTest=true -Dhttps_port=9443 -Dhttp_port=$PORT -jar mitro-core/build/mitrocore.jar" > Procfile
echo "web: java -ea -DgenerateSecretsForTest=true -Dhttp_port=$PORT -jar mitro-core/build/mitrocore.jar" > Procfile



# change to the the BUILD_DIR ($1)
#cd $1
# download the binary (-O) silently (-s)
#curl https://raw.githubusercontent.com/scottmotte/mupdf-binary/master/mupdf.tar.gz -s -O -ssl3
# make a directory to untar (like unzip) the binary
#mkdir -p vendor/mupdf
# untar the binary to the directory we want
#tar -C vendor/mupdf -xvf mupdf.tar.gz

#pwd
#ls

#blarrrrr
